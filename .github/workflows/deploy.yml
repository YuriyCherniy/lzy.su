name: Deploy by SSH
on: [workflow_dispatch, push]

jobs:
  check_django_deploy:
    runs-on: ubuntu-24.04
    environment:
      name: Production Environment
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set deploy variables
        run: |
          # Отладка значения секрета
          echo "=== Debug SECRET_KEY ==="
          SECRET_VALUE="${{ secrets.PRODUCTION_SECRET_KEY }}"
          echo "Secret length: ${#SECRET_VALUE}"
          
          # Создаем директорию если нужно
          mkdir -p ./app
          
          # Записываем переменные с перезаписью файла
          {
            echo "SECRET_KEY=${SECRET_VALUE}"
            echo "SECRET_ADMIN_URL=${{ secrets.PRODUCTION_SECRET_ADMIN_URL }}"
            echo "DEBUG=False"
            echo "POSTGRES=True"
            echo "POSTGRES_DB=${{ secrets.PRODUCTION_POSTGRES_DB }}"
            echo "POSTGRES_USER=${{ secrets.PRODUCTION_POSTGRES_USER }}"
            echo "POSTGRES_PASSWORD=${{ secrets.PRODUCTION_POSTGRES_PASSWORD }}"
          } > ./app/.env
          
          # Проверяем что записалось
          echo "=== Checking .env file ==="
          echo "First line of .env:"
          head -n 1 ./app/.env | sed 's/\(SECRET_KEY=\).*/\1[MASKED]/'
        # shell: bash


  # deploy:
  #   needs: [check_django_deploy]
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - name: Execute remote ssh commands using ssh key
  #       uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.KEY }}
  #         port: ${{ secrets.PORT }}
  #         script: |
  #           cd ~/lzy.su
  #           git pull origin docker
  #           docker compose down
  #           docker compose up --build -d
