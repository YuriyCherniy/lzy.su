name: Deploy by SSH
on: [workflow_dispatch, push]

jobs:
  check_django_deploy:
    runs-on: ubuntu-24.04
    environment:
      name: Production Environment
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set deploy variables
        run: |
          # Расширенная отладка секрета
          echo "=== Debug SECRET_KEY ==="
          SECRET_VALUE="${{ secrets.PRODUCTION_SECRET_KEY }}"
          echo "Длина секрета: ${#SECRET_VALUE}"
          
          # Создаем директорию
          mkdir -p ./app
          
          # Записываем с экранированием
          printf 'SECRET_KEY="%s"\n' "$SECRET_VALUE" > ./app/.env
          
          # Проверяем результат
          echo "=== Проверка записи SECRET_KEY ==="
          echo "Длина значения в файле (без кавычек): $(grep SECRET_KEY ./app/.env | cut -d'"' -f2 | wc -c)"
          echo "Содержимое файла (маскированное):"
          sed 's/\(SECRET_KEY="\)[^"]*\(".*\)/\1***\2/' ./app/.env
          
          # Дописываем остальные переменные
          echo "SECRET_ADMIN_URL=${{ secrets.PRODUCTION_SECRET_ADMIN_URL }}" >> ./app/.env
          echo "DEBUG=False" >> ./app/.env
          
      - name: Check deploy environment
        run: |
          python3 -m pip install -r ./app/requirements/dev.txt
          OUTPUT=$(python3 ./app/manage.py check --deploy 2>&1)
          echo "$OUTPUT"
          if echo "$OUTPUT" | grep -q "WARNINGS:"; then
            echo "Django deploy warnings found!"
            exit 1
          fi
        # shell: bash


  # deploy:
  #   needs: [check_django_deploy]
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - name: Execute remote ssh commands using ssh key
  #       uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.KEY }}
  #         port: ${{ secrets.PORT }}
  #         script: |
  #           cd ~/lzy.su
  #           git pull origin docker
  #           docker compose down
  #           docker compose up --build -d
