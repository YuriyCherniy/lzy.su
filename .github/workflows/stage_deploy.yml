name: Check Stage Security Settings and Deploy by SSH to Stage Server

on:
  workflow_dispatch:

jobs:
  check_stage_security_settings:
    runs-on: ubuntu-24.04
    environment:
      name: Stage Environment
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set .env variables
        run: |
          cat <<EOF > ./app/.env
          SECRET_KEY=${{ secrets.PRODUCTION_SECRET_KEY }}
          SECRET_ADMIN_URL=${{ secrets.PRODUCTION_SECRET_ADMIN_URL }}
          DEBUG=False
          POSTGRES=True
          POSTGRES_DB=${{ secrets.PRODUCTION_POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.PRODUCTION_POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.PRODUCTION_POSTGRES_PASSWORD }}
          EOF

      - name: Check deploy security settings
        run: |
          python3 -m pip install -r ./app/requirements/dev.txt

          #  Capture and show errors raised by Django itself
          if ! OUTPUT=$(python3 ./app/manage.py check --deploy 2>&1); then
              echo "$OUTPUT"
              exit 1
          fi

          #  Fail tests if check --deploy raises WARNINGS
          if echo "$OUTPUT" | grep -q "WARNINGS:"; then
            echo "$OUTPUT"
            echo "Django deploy warnings found!"
            exit 1
          fi

      - name: Upload file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: ./app/.env
          include-hidden-files: true

  deploy_by_ssh:
    needs: [check_stage_security_settings]
    runs-on: ubuntu-24.04
    environment:
      name: Stage Environment
    steps:
      - name: Get .env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: /home/runner/artifacts/
      
      - name: Copy .env file via ssh
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "/home/runner/artifacts/.env"
          target: ~/lzy.su/app/
          strip_components: 3
          overwrite: true

      - name: Execute remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/lzy.su
            git pull origin main
            docker compose --profile stage down
            docker compose --profile stage up --build -d
