name: Django Lint and Tests

on:
  workflow_dispatch:
    branches:
      - docker
    paths-ignore:
      - 'app/Dockerfile'
      - 'nginx/*'
      - 'certbot/*'
      - 'docker-compose.yml'
      - '.github/*'

jobs:
  linting:
    runs-on: ubuntu-24.04
    container:
      image: python:3.11
    steps:
      - uses: actions/checkout@v4

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: /root/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev.txt') }}
          restore-keys: ${{ runner.os }}-pip-
        env:
          PIP_CACHE_DIR: /root/.cache/pip

      - name: Install dependencies
        run: python3 -m pip install -r ./app/requirements/dev.txt

      - name: Lint with flake8
        run: flake8 ./app

  testing:
    needs: [linting]
    runs-on: ubuntu-24.04
    container:
      image: python:3.11

    services:
      db:
        image: postgres:17.4
        env:
          POSTGRES_DB: database
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code and set pip cache
        uses: actions/checkout@v4

      - name: Set .env variables
        run: |
          mkdir -p ./app
          echo "SECRET_KEY=${{ secrets.PRODUCTION_SECRET_KEY }}" >> ./app/.env
          echo "SECRET_ADMIN_URL=${{ secrets.PRODUCTION_SECRET_ADMIN_URL }}" >> ./app/.env
          echo "DEBUG=False" >> ./app/.env
          echo "POSTGRES=True" >> ./app/.env
          echo "POSTGRES_DB=${{ secrets.PRODUCTION_POSTGRES_DB }}" >> ./app/.env
          echo "POSTGRES_USER=${{ secrets.PRODUCTION_POSTGRES_USER }}" >> ./app/.env
          echo "POSTGRES_PASSWORD=${{ secrets.PRODUCTION_POSTGRES_PASSWORD }}" >> ./app/.env
          ls -la ./app
          cat ./app/.env

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: /root/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev.txt') }}
          restore-keys: ${{ runner.os }}-pip-
        env:
          PIP_CACHE_DIR: /root/.cache/pip 

      - name: Install dependencies
        run: python3 -m pip install -r ./app/requirements/dev.txt

      - name: Run migrations
        run: python3 ./app/manage.py migrate

      - name: Run tests
        run: python3 ./app/manage.py test short_urls core users

